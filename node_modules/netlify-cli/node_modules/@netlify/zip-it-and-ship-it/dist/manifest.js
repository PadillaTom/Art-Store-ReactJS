var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const { resolve } = require('path');
const { arch, platform } = require('process');
const { writeFile } = require('./utils/fs');
const MANIFEST_VERSION = 1;
const createManifest = ({ functions, path }) => __awaiter(this, void 0, void 0, function* () {
    const formattedFunctions = functions.map(formatFunction);
    const payload = {
        functions: formattedFunctions,
        system: { arch, platform },
        timestamp: Date.now(),
        version: MANIFEST_VERSION,
    };
    yield writeFile(path, JSON.stringify(payload));
});
const formatFunction = ({ mainFile, name, path, runtime }) => ({ mainFile, name, path: resolve(path), runtime });
module.exports = { createManifest };
//# sourceMappingURL=manifest.js.map