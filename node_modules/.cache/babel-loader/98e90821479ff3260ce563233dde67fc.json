{"ast":null,"code":"import { ADD_TO_CART, CLEAR_CART, COUNT_CART_TOTALS, REMOVE_CART_ITEM, TOGGLE_CART_ITEM_AMOUNT } from \"../actions\";\n\nconst cart_reducer = (state, action) => {\n  if (action.type === ADD_TO_CART) {\n    const {\n      id,\n      color,\n      amount,\n      product\n    } = action.payload; // Is on cart already?\n\n    const tempItem = state.cart.find(cartItem => {\n      return cartItem.id === id + color;\n    });\n\n    if (tempItem) {\n      // IS in cart: Will add to Amount(when addToCart()).\n      const tempCart = state.cart.map(cartItem => {\n        if (cartItem.id === id + color) {\n          let newAmount = cartItem.amount + amount;\n        } else {\n          return cartItem;\n        }\n      });\n      return { ...state,\n        cart: tempCart\n      };\n    } else {\n      // NOT in cart: Creamos el Item y lo agregamos al Array\n      const newItem = {\n        id: id + color,\n        name: product.name,\n        color,\n        amount,\n        image: product.images[0].url,\n        price: product.price,\n        max: product.stock\n      };\n      return { ...state,\n        cart: [...state.cart, newItem]\n      };\n    } // Is available (stock)?\n\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default cart_reducer;","map":{"version":3,"sources":["/Users/padillatom/PadillaTom/Tomas/Programacion/Practice Projects/React JS/Art&Store/src/Reducers/cart_reducer.js"],"names":["ADD_TO_CART","CLEAR_CART","COUNT_CART_TOTALS","REMOVE_CART_ITEM","TOGGLE_CART_ITEM_AMOUNT","cart_reducer","state","action","type","id","color","amount","product","payload","tempItem","cart","find","cartItem","tempCart","map","newAmount","newItem","name","image","images","url","price","max","stock","Error"],"mappings":"AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,uBALF,QAMO,YANP;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgBR,WAApB,EAAiC;AAC/B,UAAM;AAAES,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,MAAb;AAAqBC,MAAAA;AAArB,QAAiCL,MAAM,CAACM,OAA9C,CAD+B,CAG/B;;AACA,UAAMC,QAAQ,GAAGR,KAAK,CAACS,IAAN,CAAWC,IAAX,CAAiBC,QAAD,IAAc;AAC7C,aAAOA,QAAQ,CAACR,EAAT,KAAgBA,EAAE,GAAGC,KAA5B;AACD,KAFgB,CAAjB;;AAGA,QAAII,QAAJ,EAAc;AACZ;AACA,YAAMI,QAAQ,GAAGZ,KAAK,CAACS,IAAN,CAAWI,GAAX,CAAgBF,QAAD,IAAc;AAC5C,YAAIA,QAAQ,CAACR,EAAT,KAAgBA,EAAE,GAAGC,KAAzB,EAAgC;AAC9B,cAAIU,SAAS,GAAGH,QAAQ,CAACN,MAAT,GAAkBA,MAAlC;AACD,SAFD,MAEO;AACL,iBAAOM,QAAP;AACD;AACF,OANgB,CAAjB;AAQA,aAAO,EAAE,GAAGX,KAAL;AAAYS,QAAAA,IAAI,EAAEG;AAAlB,OAAP;AACD,KAXD,MAWO;AACL;AACA,YAAMG,OAAO,GAAG;AACdZ,QAAAA,EAAE,EAAEA,EAAE,GAAGC,KADK;AAEdY,QAAAA,IAAI,EAAEV,OAAO,CAACU,IAFA;AAGdZ,QAAAA,KAHc;AAIdC,QAAAA,MAJc;AAKdY,QAAAA,KAAK,EAAEX,OAAO,CAACY,MAAR,CAAe,CAAf,EAAkBC,GALX;AAMdC,QAAAA,KAAK,EAAEd,OAAO,CAACc,KAND;AAOdC,QAAAA,GAAG,EAAEf,OAAO,CAACgB;AAPC,OAAhB;AASA,aAAO,EAAE,GAAGtB,KAAL;AAAYS,QAAAA,IAAI,EAAE,CAAC,GAAGT,KAAK,CAACS,IAAV,EAAgBM,OAAhB;AAAlB,OAAP;AACD,KA9B8B,CA+B/B;;AACD;;AACD,QAAM,IAAIQ,KAAJ,CAAW,gBAAetB,MAAM,CAACC,IAAK,iBAAtC,CAAN;AACD,CAnCD;;AAqCA,eAAeH,YAAf","sourcesContent":["import {\n  ADD_TO_CART,\n  CLEAR_CART,\n  COUNT_CART_TOTALS,\n  REMOVE_CART_ITEM,\n  TOGGLE_CART_ITEM_AMOUNT,\n} from \"../actions\";\n\nconst cart_reducer = (state, action) => {\n  if (action.type === ADD_TO_CART) {\n    const { id, color, amount, product } = action.payload;\n\n    // Is on cart already?\n    const tempItem = state.cart.find((cartItem) => {\n      return cartItem.id === id + color;\n    });\n    if (tempItem) {\n      // IS in cart: Will add to Amount(when addToCart()).\n      const tempCart = state.cart.map((cartItem) => {\n        if (cartItem.id === id + color) {\n          let newAmount = cartItem.amount + amount;\n        } else {\n          return cartItem;\n        }\n      });\n\n      return { ...state, cart: tempCart };\n    } else {\n      // NOT in cart: Creamos el Item y lo agregamos al Array\n      const newItem = {\n        id: id + color,\n        name: product.name,\n        color,\n        amount,\n        image: product.images[0].url,\n        price: product.price,\n        max: product.stock,\n      };\n      return { ...state, cart: [...state.cart, newItem] };\n    }\n    // Is available (stock)?\n  }\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default cart_reducer;\n"]},"metadata":{},"sourceType":"module"}