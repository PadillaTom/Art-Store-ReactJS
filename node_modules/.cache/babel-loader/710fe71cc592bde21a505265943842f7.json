{"ast":null,"code":"var _jsxFileName = \"/Users/padillatom/PadillaTom/Tomas/Programacion/Practice Projects/React JS/Art&Store/src/Context/cart_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useContext, useReducer } from \"react\";\nimport reducer from \"../Reducers/cart_reducer\";\nimport { ADD_TO_CART, REMOVE_CART_ITEM, TOGGLE_CART_ITEM_AMOUNT, CLEAR_CART, COUNT_CART_TOTALS } from \"../actions\"; // Search if there is a CART in localStorage:\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalStorage = () => {\n  let cart = localStorage.getItem(\"cart\");\n\n  if (cart) {\n    return JSON.parse(localStorage.getItem(\"cart\"));\n  } else {\n    return [];\n  }\n}; // Initial State:\n\n\nconst initialState = {\n  cart: getLocalStorage(),\n  total_items: 0,\n  total_amount: 0,\n  shipping_fee: 399\n};\nconst CartContext = /*#__PURE__*/React.createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); // Add to cart:\n\n  const addToCart = (id, color, amount, product) => {\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        id,\n        color,\n        amount,\n        product\n      }\n    });\n  }; // Remove Item:\n\n\n  const removeFromCart = id => {\n    dispatch({\n      type: REMOVE_CART_ITEM,\n      payload: id\n    });\n  }; // Toggle Amount:\n\n\n  const toggleAmount = (id, value) => {\n    dispatch({\n      type: TOGGLE_CART_ITEM_AMOUNT,\n      payload: {\n        id,\n        value\n      }\n    });\n  }; // Clear Cart:\n\n\n  const clearCart = () => {\n    dispatch({\n      type: CLEAR_CART\n    });\n  }; // ::: UseEffects :::\n\n\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(state.cart));\n    dispatch({\n      type: COUNT_CART_TOTALS\n    });\n  }, [state.cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: { ...state,\n      addToCart,\n      removeFromCart,\n      toggleAmount,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n_s(CartProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = CartProvider;\nexport const useCartContext = () => {\n  _s2();\n\n  return useContext(CartContext);\n};\n\n_s2(useCartContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/padillatom/PadillaTom/Tomas/Programacion/Practice Projects/React JS/Art&Store/src/Context/cart_context.js"],"names":["React","useEffect","useContext","useReducer","reducer","ADD_TO_CART","REMOVE_CART_ITEM","TOGGLE_CART_ITEM_AMOUNT","CLEAR_CART","COUNT_CART_TOTALS","getLocalStorage","cart","localStorage","getItem","JSON","parse","initialState","total_items","total_amount","shipping_fee","CartContext","createContext","CartProvider","children","state","dispatch","addToCart","id","color","amount","product","type","payload","removeFromCart","toggleAmount","value","clearCart","setItem","stringify","useCartContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,UAAvC,QAAyD,OAAzD;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SACEC,WADF,EAEEC,gBAFF,EAGEC,uBAHF,EAIEC,UAJF,EAKEC,iBALF,QAMO,YANP,C,CAQA;;;;AACA,MAAMC,eAAe,GAAG,MAAM;AAC5B,MAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;AACA,MAAIF,IAAJ,EAAU;AACR,WAAOG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CAPD,C,CASA;;;AACA,MAAMG,YAAY,GAAG;AACnBL,EAAAA,IAAI,EAAED,eAAe,EADF;AAEnBO,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,YAAY,EAAE,CAHK;AAInBC,EAAAA,YAAY,EAAE;AAJK,CAArB;AAOA,MAAMC,WAAW,gBAAGpB,KAAK,CAACqB,aAAN,EAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACC,OAAD,EAAUY,YAAV,CAApC,CAD4C,CAG5C;;AACA,QAAMU,SAAS,GAAG,CAACC,EAAD,EAAKC,KAAL,EAAYC,MAAZ,EAAoBC,OAApB,KAAgC;AAChDL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE1B,WAAR;AAAqB2B,MAAAA,OAAO,EAAE;AAAEL,QAAAA,EAAF;AAAMC,QAAAA,KAAN;AAAaC,QAAAA,MAAb;AAAqBC,QAAAA;AAArB;AAA9B,KAAD,CAAR;AACD,GAFD,CAJ4C,CAQ5C;;;AACA,QAAMG,cAAc,GAAIN,EAAD,IAAQ;AAC7BF,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEzB,gBAAR;AAA0B0B,MAAAA,OAAO,EAAEL;AAAnC,KAAD,CAAR;AACD,GAFD,CAT4C,CAY5C;;;AACA,QAAMO,YAAY,GAAG,CAACP,EAAD,EAAKQ,KAAL,KAAe;AAClCV,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAExB,uBAAR;AAAiCyB,MAAAA,OAAO,EAAE;AAAEL,QAAAA,EAAF;AAAMQ,QAAAA;AAAN;AAA1C,KAAD,CAAR;AACD,GAFD,CAb4C,CAgB5C;;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtBX,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEvB;AAAR,KAAD,CAAR;AACD,GAFD,CAjB4C,CAqB5C;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAACyB,OAAb,CAAqB,MAArB,EAA6BvB,IAAI,CAACwB,SAAL,CAAed,KAAK,CAACb,IAArB,CAA7B;AACAc,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEtB;AAAR,KAAD,CAAR;AACD,GAHQ,EAGN,CAACe,KAAK,CAACb,IAAP,CAHM,CAAT;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE,EAAE,GAAGa,KAAL;AAAYE,MAAAA,SAAZ;AAAuBO,MAAAA,cAAvB;AAAuCC,MAAAA,YAAvC;AAAqDE,MAAAA;AAArD,KADT;AAAA,cAGGb;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlCM,C,CAmCP;;GAnCaD,Y;;KAAAA,Y;AAoCb,OAAO,MAAMiB,cAAc,GAAG,MAAM;AAAA;;AAClC,SAAOrC,UAAU,CAACkB,WAAD,CAAjB;AACD,CAFM;;IAAMmB,c","sourcesContent":["import React, { useEffect, useContext, useReducer } from \"react\";\nimport reducer from \"../Reducers/cart_reducer\";\nimport {\n  ADD_TO_CART,\n  REMOVE_CART_ITEM,\n  TOGGLE_CART_ITEM_AMOUNT,\n  CLEAR_CART,\n  COUNT_CART_TOTALS,\n} from \"../actions\";\n\n// Search if there is a CART in localStorage:\nconst getLocalStorage = () => {\n  let cart = localStorage.getItem(\"cart\");\n  if (cart) {\n    return JSON.parse(localStorage.getItem(\"cart\"));\n  } else {\n    return [];\n  }\n};\n\n// Initial State:\nconst initialState = {\n  cart: getLocalStorage(),\n  total_items: 0,\n  total_amount: 0,\n  shipping_fee: 399,\n};\n\nconst CartContext = React.createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // Add to cart:\n  const addToCart = (id, color, amount, product) => {\n    dispatch({ type: ADD_TO_CART, payload: { id, color, amount, product } });\n  };\n\n  // Remove Item:\n  const removeFromCart = (id) => {\n    dispatch({ type: REMOVE_CART_ITEM, payload: id });\n  };\n  // Toggle Amount:\n  const toggleAmount = (id, value) => {\n    dispatch({ type: TOGGLE_CART_ITEM_AMOUNT, payload: { id, value } });\n  };\n  // Clear Cart:\n  const clearCart = () => {\n    dispatch({ type: CLEAR_CART });\n  };\n\n  // ::: UseEffects :::\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(state.cart));\n    dispatch({ type: COUNT_CART_TOTALS });\n  }, [state.cart]);\n\n  return (\n    <CartContext.Provider\n      value={{ ...state, addToCart, removeFromCart, toggleAmount, clearCart }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n// make sure use\nexport const useCartContext = () => {\n  return useContext(CartContext);\n};\n"]},"metadata":{},"sourceType":"module"}