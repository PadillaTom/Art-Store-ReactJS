{"ast":null,"code":"var _jsxFileName = \"/Users/padillatom/PadillaTom/Tomas/Programacion/Practice Projects/React JS/Art&Store/src/Components/Stripe/StripeCheckout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { CardElement, useStripe, Elements, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { formatPrice } from \"../../Utils/helpers\";\nimport { useCartContext } from \"../../Context/cart_context\";\nimport { useUserContext } from \"../../Context/user_context\"; // ::: Load Stripe from ENV Variable (KEY) :::\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst CheckoutForm = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    cart,\n    total_amount,\n    shipping_fee,\n    clearCart\n  } = useCartContext();\n  const {\n    myUser\n  } = useUserContext(); // ::: Stripe Stuff :::\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const createPaymentIntent = async () => {\n    try {\n      // Mandamos DATA a Serverless Function (Conecta a Stripe)\n      const {\n        data\n      } = await axios.post(\"/.netlify/functions/create-payment-intent\", JSON.stringify({\n        cart,\n        shipping_fee,\n        total_amount\n      })); // Recibimos:\n\n      setClientSecret(data.clientSecret);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    createPaymentIntent(); // eslint-disable-next-line\n  }, []);\n\n  const handleChange = async event => {};\n\n  const handleSubmit = async event => {}; // ::::::::::::::::::::\n  //    Payment Form\n  // ::::::::::::::::::::\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      id: \"payment-form\",\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\",\n        onChange: handleChange,\n        options: cardStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: processing || disabled || succeeded,\n        id: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"button-text\",\n          children: processing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\",\n            id: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 27\n          }, this) : \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-error\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: succeeded ? \"result-message\" : \"result-message hidden\",\n        children: [\"Payment Succeeded, see result: \", \"\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://dashboard.stripe.com/test/payments`,\n          children: \"Stripe Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), \"Refresh to Pay Again.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}; // ::: Main Export :::\n\n\n_s(CheckoutForm, \"OyiIsgKAjRud/Vuk5NuUgQ5j2xc=\", false, function () {\n  return [useHistory, useCartContext, useUserContext, useStripe, useElements];\n});\n\n_c = CheckoutForm;\n\nconst StripeCheckout = () => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = StripeCheckout;\nconst Wrapper = styled.section`\n  form {\n    width: 90vw;\n    align-self: center;\n    box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n      0px 2px 5px 0px rgba(50, 50, 93, 0.1),\n      0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n    border-radius: 7px;\n    padding: 40px;\n  }\n  input {\n    border-radius: 6px;\n    margin-bottom: 6px;\n    padding: 12px;\n    border: 1px solid rgba(50, 50, 93, 0.1);\n    max-height: 44px;\n    font-size: 16px;\n    width: 100%;\n    background: white;\n    box-sizing: border-box;\n  }\n  .result-message {\n    line-height: 22px;\n    font-size: 16px;\n  }\n  .result-message a {\n    color: rgb(89, 111, 214);\n    font-weight: 600;\n    text-decoration: none;\n  }\n  .hidden {\n    display: none;\n  }\n  #card-error {\n    color: rgb(105, 115, 134);\n    font-size: 16px;\n    line-height: 20px;\n    margin-top: 12px;\n    text-align: center;\n  }\n  #card-element {\n    border-radius: 4px 4px 0 0;\n    padding: 12px;\n    border: 1px solid rgba(50, 50, 93, 0.1);\n    max-height: 44px;\n    width: 100%;\n    background: white;\n    box-sizing: border-box;\n  }\n  #payment-request-button {\n    margin-bottom: 32px;\n  }\n  /* Buttons and links */\n  button {\n    background: #5469d4;\n    font-family: Arial, sans-serif;\n    color: #ffffff;\n    border-radius: 0 0 4px 4px;\n    border: 0;\n    padding: 12px 16px;\n    font-size: 16px;\n    font-weight: 600;\n    cursor: pointer;\n    display: block;\n    transition: all 0.2s ease;\n    box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);\n    width: 100%;\n  }\n  button:hover {\n    filter: contrast(115%);\n  }\n  button:disabled {\n    opacity: 0.5;\n    cursor: default;\n  }\n  /* spinner/processing state, errors */\n  .spinner,\n  .spinner:before,\n  .spinner:after {\n    border-radius: 50%;\n  }\n  .spinner {\n    color: #ffffff;\n    font-size: 22px;\n    text-indent: -99999px;\n    margin: 0px auto;\n    position: relative;\n    width: 20px;\n    height: 20px;\n    box-shadow: inset 0 0 0 2px;\n    -webkit-transform: translateZ(0);\n    -ms-transform: translateZ(0);\n    transform: translateZ(0);\n  }\n  .spinner:before,\n  .spinner:after {\n    position: absolute;\n    content: \"\";\n  }\n  .spinner:before {\n    width: 10.4px;\n    height: 20.4px;\n    background: #5469d4;\n    border-radius: 20.4px 0 0 20.4px;\n    top: -0.2px;\n    left: -0.2px;\n    -webkit-transform-origin: 10.4px 10.2px;\n    transform-origin: 10.4px 10.2px;\n    -webkit-animation: loading 2s infinite ease 1.5s;\n    animation: loading 2s infinite ease 1.5s;\n  }\n  .spinner:after {\n    width: 10.4px;\n    height: 10.2px;\n    background: #5469d4;\n    border-radius: 0 10.2px 10.2px 0;\n    top: -0.1px;\n    left: 10.2px;\n    -webkit-transform-origin: 0px 10.2px;\n    transform-origin: 0px 10.2px;\n    -webkit-animation: loading 2s infinite ease;\n    animation: loading 2s infinite ease;\n  }\n  @keyframes loading {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    form {\n      width: 80vw;\n    }\n  }\n`;\n_c3 = Wrapper;\nexport default StripeCheckout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"StripeCheckout\");\n$RefreshReg$(_c3, \"Wrapper\");","map":{"version":3,"sources":["/Users/padillatom/PadillaTom/Tomas/Programacion/Practice Projects/React JS/Art&Store/src/Components/Stripe/StripeCheckout.js"],"names":["React","useEffect","useState","styled","useHistory","loadStripe","CardElement","useStripe","Elements","useElements","axios","formatPrice","useCartContext","useUserContext","stripePromise","process","env","REACT_APP_STRIPE_PUBLIC_KEY","CheckoutForm","history","cart","total_amount","shipping_fee","clearCart","myUser","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","elements","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","createPaymentIntent","data","post","JSON","stringify","console","log","response","handleChange","event","handleSubmit","StripeCheckout","Wrapper","section"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  CardElement,\n  useStripe,\n  Elements,\n  useElements,\n} from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\n\nimport { formatPrice } from \"../../Utils/helpers\";\n\nimport { useCartContext } from \"../../Context/cart_context\";\nimport { useUserContext } from \"../../Context/user_context\";\n\n// ::: Load Stripe from ENV Variable (KEY) :::\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst CheckoutForm = () => {\n  const history = useHistory();\n  const { cart, total_amount, shipping_fee, clearCart } = useCartContext();\n  const { myUser } = useUserContext();\n\n  // ::: Stripe Stuff :::\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n  const createPaymentIntent = async () => {\n    try {\n      // Mandamos DATA a Serverless Function (Conecta a Stripe)\n      const { data } = await axios.post(\n        \"/.netlify/functions/create-payment-intent\",\n        JSON.stringify({ cart, shipping_fee, total_amount })\n      );\n      // Recibimos:\n      setClientSecret(data.clientSecret);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n  useEffect(() => {\n    createPaymentIntent();\n    // eslint-disable-next-line\n  }, []);\n  const handleChange = async (event) => {};\n  const handleSubmit = async (event) => {};\n\n  // ::::::::::::::::::::\n  //    Payment Form\n  // ::::::::::::::::::::\n  return (\n    <div>\n      <form onSubmit={handleSubmit} id=\"payment-form\">\n        <CardElement\n          id=\"card-element\"\n          onChange={handleChange}\n          options={cardStyle}\n        ></CardElement>\n        <button disabled={processing || disabled || succeeded} id=\"submit\">\n          <span id=\"button-text\">\n            {processing ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay\"}\n          </span>\n        </button>\n\n        {/* Show ERROR when PROCESSING Payment */}\n        {error && (\n          <div className=\"card-error\" role=\"alert\">\n            {error}\n          </div>\n        )}\n\n        {/* Show SUCCESS when COMPLETED Payment */}\n        <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\n          Payment Succeeded, see result: {\"\"}\n          <a href={`https://dashboard.stripe.com/test/payments`}>\n            Stripe Dashboard\n          </a>\n          <br />\n          Refresh to Pay Again.\n        </p>\n      </form>\n    </div>\n  );\n};\n// ::: Main Export :::\nconst StripeCheckout = () => {\n  return (\n    <Wrapper>\n      <Elements stripe={stripePromise}>\n        <CheckoutForm></CheckoutForm>\n      </Elements>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.section`\n  form {\n    width: 90vw;\n    align-self: center;\n    box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n      0px 2px 5px 0px rgba(50, 50, 93, 0.1),\n      0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n    border-radius: 7px;\n    padding: 40px;\n  }\n  input {\n    border-radius: 6px;\n    margin-bottom: 6px;\n    padding: 12px;\n    border: 1px solid rgba(50, 50, 93, 0.1);\n    max-height: 44px;\n    font-size: 16px;\n    width: 100%;\n    background: white;\n    box-sizing: border-box;\n  }\n  .result-message {\n    line-height: 22px;\n    font-size: 16px;\n  }\n  .result-message a {\n    color: rgb(89, 111, 214);\n    font-weight: 600;\n    text-decoration: none;\n  }\n  .hidden {\n    display: none;\n  }\n  #card-error {\n    color: rgb(105, 115, 134);\n    font-size: 16px;\n    line-height: 20px;\n    margin-top: 12px;\n    text-align: center;\n  }\n  #card-element {\n    border-radius: 4px 4px 0 0;\n    padding: 12px;\n    border: 1px solid rgba(50, 50, 93, 0.1);\n    max-height: 44px;\n    width: 100%;\n    background: white;\n    box-sizing: border-box;\n  }\n  #payment-request-button {\n    margin-bottom: 32px;\n  }\n  /* Buttons and links */\n  button {\n    background: #5469d4;\n    font-family: Arial, sans-serif;\n    color: #ffffff;\n    border-radius: 0 0 4px 4px;\n    border: 0;\n    padding: 12px 16px;\n    font-size: 16px;\n    font-weight: 600;\n    cursor: pointer;\n    display: block;\n    transition: all 0.2s ease;\n    box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);\n    width: 100%;\n  }\n  button:hover {\n    filter: contrast(115%);\n  }\n  button:disabled {\n    opacity: 0.5;\n    cursor: default;\n  }\n  /* spinner/processing state, errors */\n  .spinner,\n  .spinner:before,\n  .spinner:after {\n    border-radius: 50%;\n  }\n  .spinner {\n    color: #ffffff;\n    font-size: 22px;\n    text-indent: -99999px;\n    margin: 0px auto;\n    position: relative;\n    width: 20px;\n    height: 20px;\n    box-shadow: inset 0 0 0 2px;\n    -webkit-transform: translateZ(0);\n    -ms-transform: translateZ(0);\n    transform: translateZ(0);\n  }\n  .spinner:before,\n  .spinner:after {\n    position: absolute;\n    content: \"\";\n  }\n  .spinner:before {\n    width: 10.4px;\n    height: 20.4px;\n    background: #5469d4;\n    border-radius: 20.4px 0 0 20.4px;\n    top: -0.2px;\n    left: -0.2px;\n    -webkit-transform-origin: 10.4px 10.2px;\n    transform-origin: 10.4px 10.2px;\n    -webkit-animation: loading 2s infinite ease 1.5s;\n    animation: loading 2s infinite ease 1.5s;\n  }\n  .spinner:after {\n    width: 10.4px;\n    height: 10.2px;\n    background: #5469d4;\n    border-radius: 0 10.2px 10.2px 0;\n    top: -0.1px;\n    left: 10.2px;\n    -webkit-transform-origin: 0px 10.2px;\n    transform-origin: 0px 10.2px;\n    -webkit-animation: loading 2s infinite ease;\n    animation: loading 2s infinite ease;\n  }\n  @keyframes loading {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    form {\n      width: 80vw;\n    }\n  }\n`;\n\nexport default StripeCheckout;\n"]},"metadata":{},"sourceType":"module"}