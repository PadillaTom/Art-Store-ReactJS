{"ast":null,"code":"var _jsxFileName = \"/Users/padillatom/PadillaTom/Tomas/Programacion/Practice Projects/React JS/Art&Store/src/Context/filter_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useContext, useReducer } from \"react\";\nimport reducer from \"../Reducers/filter_reducer\";\nimport { LOAD_PRODUCTS, SET_GRIDVIEW, SET_LISTVIEW, UPDATE_SORT, SORT_PRODUCTS, UPDATE_FILTERS, FILTER_PRODUCTS, CLEAR_FILTERS } from \"../actions\";\nimport { useProductsContext } from \"./products_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  filtered_products: [],\n  all_products: [],\n  isGrid: true,\n  sortType: \"name-a\",\n  filters: {\n    text: \"\",\n    company: \"all\",\n    category: \"all\",\n    color: \"all\",\n    min_price: 0,\n    max_price: 0,\n    price: 0,\n    shipping: false\n  }\n};\nconst FilterContext = /*#__PURE__*/React.createContext();\nexport const FilterProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    products\n  } = useProductsContext();\n  const [state, dispatch] = useReducer(reducer, initialState); // UseEffects :\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_PRODUCTS,\n      payload: products\n    });\n  }, [products]);\n  useEffect(() => {\n    dispatch({\n      type: SORT_PRODUCTS\n    });\n  }, [products, state.sortType]); // Views\n\n  const setGridView = () => {\n    dispatch({\n      type: SET_GRIDVIEW\n    });\n  };\n\n  const setListView = () => {\n    dispatch({\n      type: SET_LISTVIEW\n    });\n  }; // Sort and Filters:\n\n\n  const updateSortType = e => {\n    const value = e.target.value;\n    dispatch({\n      type: UPDATE_SORT,\n      payload: value\n    });\n  };\n\n  const updateFilters = e => {\n    let inputName = e.target.name;\n    let inputValue = e.target.value;\n    console.log(name, value);\n  };\n\n  const cleanFilters = () => {};\n\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: { ...state,\n      setGridView,\n      setListView,\n      updateSortType,\n      updateFilters,\n      cleanFilters\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n_s(FilterProvider, \"8cAveOIhpTlV5n6mdVb22DSUbYQ=\", false, function () {\n  return [useProductsContext];\n});\n\n_c = FilterProvider;\nexport const useFilterContext = () => {\n  _s2();\n\n  return useContext(FilterContext);\n};\n\n_s2(useFilterContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"sources":["/Users/padillatom/PadillaTom/Tomas/Programacion/Practice Projects/React JS/Art&Store/src/Context/filter_context.js"],"names":["React","useEffect","useContext","useReducer","reducer","LOAD_PRODUCTS","SET_GRIDVIEW","SET_LISTVIEW","UPDATE_SORT","SORT_PRODUCTS","UPDATE_FILTERS","FILTER_PRODUCTS","CLEAR_FILTERS","useProductsContext","initialState","filtered_products","all_products","isGrid","sortType","filters","text","company","category","color","min_price","max_price","price","shipping","FilterContext","createContext","FilterProvider","children","products","state","dispatch","type","payload","setGridView","setListView","updateSortType","e","value","target","updateFilters","inputName","name","inputValue","console","log","cleanFilters","useFilterContext"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useReducer } from \"react\";\nimport reducer from \"../Reducers/filter_reducer\";\nimport {\n  LOAD_PRODUCTS,\n  SET_GRIDVIEW,\n  SET_LISTVIEW,\n  UPDATE_SORT,\n  SORT_PRODUCTS,\n  UPDATE_FILTERS,\n  FILTER_PRODUCTS,\n  CLEAR_FILTERS,\n} from \"../actions\";\nimport { useProductsContext } from \"./products_context\";\n\nconst initialState = {\n  filtered_products: [],\n  all_products: [],\n  isGrid: true,\n  sortType: \"name-a\",\n  filters: {\n    text: \"\",\n    company: \"all\",\n    category: \"all\",\n    color: \"all\",\n    min_price: 0,\n    max_price: 0,\n    price: 0,\n    shipping: false,\n  },\n};\n\nconst FilterContext = React.createContext();\n\nexport const FilterProvider = ({ children }) => {\n  const { products } = useProductsContext();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // UseEffects :\n  useEffect(() => {\n    dispatch({ type: LOAD_PRODUCTS, payload: products });\n  }, [products]);\n\n  useEffect(() => {\n    dispatch({ type: SORT_PRODUCTS });\n  }, [products, state.sortType]);\n\n  // Views\n  const setGridView = () => {\n    dispatch({ type: SET_GRIDVIEW });\n  };\n  const setListView = () => {\n    dispatch({ type: SET_LISTVIEW });\n  };\n\n  // Sort and Filters:\n  const updateSortType = (e) => {\n    const value = e.target.value;\n    dispatch({ type: UPDATE_SORT, payload: value });\n  };\n\n  const updateFilters = (e) => {\n    let inputName = e.target.name;\n    let inputValue = e.target.value;\n    console.log(name, value);\n  };\n  const cleanFilters = () => {};\n\n  return (\n    <FilterContext.Provider\n      value={{\n        ...state,\n        setGridView,\n        setListView,\n        updateSortType,\n        updateFilters,\n        cleanFilters,\n      }}\n    >\n      {children}\n    </FilterContext.Provider>\n  );\n};\n// make sure use\nexport const useFilterContext = () => {\n  return useContext(FilterContext);\n};\n"]},"metadata":{},"sourceType":"module"}