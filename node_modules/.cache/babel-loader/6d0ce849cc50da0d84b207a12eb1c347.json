{"ast":null,"code":"var _jsxFileName = \"/Users/padillatom/PadillaTom/Tomas/Programacion/Practice Projects/React JS/Art&Store/src/Components/Stripe/StripeCheckout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { CardElement, useStripe, Elements, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { formatPrice } from \"../../Utils/helpers\";\nimport { useCartContext } from \"../../Context/cart_context\";\nimport { useUserContext } from \"../../Context/user_context\"; // ::: Load Stripe from ENV Variable (KEY) :::\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY); //  ::: Checkout Form :::\n\nconst CheckoutForm = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    cart,\n    total_amount,\n    shipping_fee,\n    clearCart\n  } = useCartContext();\n  const {\n    myUser\n  } = useUserContext(); // Stripe Stuff:\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const createPaymentIntent = async () => {\n    console.log(\"Hello from Stripe Payment Intent\");\n  };\n\n  useEffect(() => {\n    createPaymentIntent(); // eslint-disable-next-line\n  }, []);\n\n  const handleChange = async event => {};\n\n  const handleSubmit = async event => {}; //    Return:\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      id: \"payment-form\",\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\",\n        onChange: handleChange,\n        options: cardStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: processing || disabled || succeeded,\n        id: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}; //  ::: Checkout Form :::\n// ::: Main Export :::\n\n\n_s(CheckoutForm, \"OyiIsgKAjRud/Vuk5NuUgQ5j2xc=\", false, function () {\n  return [useHistory, useCartContext, useUserContext, useStripe, useElements];\n});\n\n_c = CheckoutForm;\n\nconst StripeCheckout = () => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = StripeCheckout;\nconst Wrapper = styled.section``;\n_c3 = Wrapper;\nexport default StripeCheckout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"StripeCheckout\");\n$RefreshReg$(_c3, \"Wrapper\");","map":{"version":3,"sources":["/Users/padillatom/PadillaTom/Tomas/Programacion/Practice Projects/React JS/Art&Store/src/Components/Stripe/StripeCheckout.js"],"names":["React","useEffect","useState","styled","useHistory","loadStripe","CardElement","useStripe","Elements","useElements","axios","formatPrice","useCartContext","useUserContext","stripePromise","process","env","REACT_APP_STRIPE_PUBLIC_KEY","CheckoutForm","history","cart","total_amount","shipping_fee","clearCart","myUser","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","elements","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","createPaymentIntent","console","log","handleChange","event","handleSubmit","StripeCheckout","Wrapper","section"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  CardElement,\n  useStripe,\n  Elements,\n  useElements,\n} from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\n\nimport { formatPrice } from \"../../Utils/helpers\";\n\nimport { useCartContext } from \"../../Context/cart_context\";\nimport { useUserContext } from \"../../Context/user_context\";\n\n// ::: Load Stripe from ENV Variable (KEY) :::\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\n//  ::: Checkout Form :::\nconst CheckoutForm = () => {\n  const history = useHistory();\n  const { cart, total_amount, shipping_fee, clearCart } = useCartContext();\n  const { myUser } = useUserContext();\n\n  // Stripe Stuff:\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n\n  const createPaymentIntent = async () => {\n    console.log(\"Hello from Stripe Payment Intent\");\n  };\n  useEffect(() => {\n    createPaymentIntent();\n    // eslint-disable-next-line\n  }, []);\n  const handleChange = async (event) => {};\n  const handleSubmit = async (event) => {};\n\n  //    Return:\n  return (\n    <div>\n      <form onSubmit={handleSubmit} id=\"payment-form\">\n        <CardElement\n          id=\"card-element\"\n          onChange={handleChange}\n          options={cardStyle}\n        ></CardElement>\n        <button\n          disabled={processing || disabled || succeeded}\n          id=\"submit\"\n        ></button>\n      </form>\n    </div>\n  );\n};\n\n//  ::: Checkout Form :::\n\n// ::: Main Export :::\nconst StripeCheckout = () => {\n  return (\n    <Wrapper>\n      <Elements stripe={stripePromise}>\n        <CheckoutForm></CheckoutForm>\n      </Elements>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.section``;\n\nexport default StripeCheckout;\n"]},"metadata":{},"sourceType":"module"}